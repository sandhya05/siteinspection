{"version":3,"sources":["ng://ng2-simple-smooth-scroll/lib/ng2-simple-smooth-scroll.service.ts","ng://ng2-simple-smooth-scroll/lib/ng2-simple-smooth-scroll.directive.ts","ng://ng2-simple-smooth-scroll/lib/ng2-simple-smooth-scroll.module.ts"],"names":["SimpleSmoothScrollOption","option","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","this","duration","offset","easing","EasingFunctions","SimpleSmoothScrollService","platformId","prototype","smoothScroll","height","opt","isPlatformBrowser","option_1","doc","document","documentElement","begin_1","window","pageYOffset","scrollTop","clientTop","tick_1","distance_1","time_1","y_1","current_1","s_1","setInterval","clearInterval","scrollTo","smoothScrollToTop","smoothScrollToAnchor","eid","location","hash","replace","target","getElementById","offsetTop","Injectable","args","providedIn","Object","decorators","type","Inject","PLATFORM_ID","SimpleSmoothScrollDirective","el","smooth","onClick","nativeElement","showHash","history","pushState","Directive","selector","ElementRef","Input","HostListener","SimpleSmoothScrollModule","NgModule","declarations","providers","exports"],"mappings":"yVAAA,IASAA,EAKE,SAAAA,EAAYC,wBASc,CAExBC,OAAQ,SAACC,GAAQ,OAAOA,GAExBC,WAAY,SAACD,GAAQ,OAAOA,EAAIA,GAEhCE,YAAa,SAACF,GAAQ,OAAOA,GAAK,EAAIA,IAEtCG,cAAe,SAACH,GAAQ,OAAOA,EAAI,GAAK,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAlB,GAErDI,YAAa,SAACJ,GAAQ,OAAOA,EAAIA,EAAIA,GAErCK,aAAc,SAACL,GAAQ,QAAUA,EAAKA,EAAIA,EAAI,GAE9CM,eAAgB,SAACN,GAAQ,OAAOA,EAAI,GAAK,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,GAE/FO,YAAa,SAACP,GAAQ,OAAOA,EAAIA,EAAIA,EAAIA,GAEzCQ,aAAc,SAACR,GAAQ,OAAO,KAAOA,EAAKA,EAAIA,EAAIA,GAElDS,eAAgB,SAACT,GAAQ,OAAOA,EAAI,GAAK,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,IAAOA,EAAKA,EAAIA,EAAIA,GAErFU,YAAa,SAACV,GAAQ,OAAOA,EAAIA,EAAIA,EAAIA,EAAIA,GAE7CW,aAAc,SAACX,GAAQ,OAAO,IAAOA,EAAKA,EAAIA,EAAIA,EAAIA,GAEtDY,eAAgB,SAACZ,GAAQ,OAAOA,EAAI,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAQA,EAAKA,EAAIA,EAAIA,EAAIA,IAlC/Fa,KAAKC,SAAWhB,EAAOgB,UAAY,IACnCD,KAAKE,OAASjB,EAAOiB,QAAU,EAC/BF,KAAKG,OAASH,KAAKI,gBAAgBnB,EAAOkB,SAAWH,KAAKI,gBAA+B,eAR7FC,EAAA,WAiDE,SAAAA,EAAyCC,GAAAN,KAAAM,WAAAA,SAElCD,EAAAE,UAAAC,sBAAaC,EAAgBC,GAClC,GAAIC,EAAAA,kBAAkBX,KAAKM,YAAa,CACtC,IAAMM,EAAS,IAAI5B,EAAyB0B,GACtCT,EAAWW,EAAOX,SAClBY,EAAMC,SAASC,gBACfC,GAASC,OAAOC,aAAeL,EAAIM,YAAcN,EAAIO,WAAa,GAElEC,EAAO,GAAKpB,EADR,IAGJqB,GADNb,GAAUG,EAAOV,QACSc,EAC1B,GAAgB,GAAZM,EAAe,OACnB,IAAIC,EAAO,EACPC,OAAC,EAAEC,OAAO,EACVC,EAAIC,YAAY,WAClBH,EAAIZ,EAAOT,OAAOoB,GAEHd,IADfgB,EAAUD,EAAIF,EAAWN,IACW,EAAXM,IACvBG,EAAUhB,EACVmB,cAAcF,IAEZD,EAAUhB,EAASY,GAAQC,EAAW,IACxCG,EAAUhB,EACVmB,cAAcF,IAEZD,EAAU,GAAKH,EAAW,IAC5BG,EAAU,EACVG,cAAcF,IAEhBT,OAAOY,SAAS,EAAGJ,GACnBF,GAAQF,GAvBA,MA4BPhB,EAAAE,UAAAuB,2BAAkBpB,QAAA,IAAAA,IAAAA,EAAA,IACvBV,KAAKQ,aAAa,EAAGE,IAGhBL,EAAAE,UAAAwB,8BAAqBrB,GAC1B,QAD0B,IAAAA,IAAAA,EAAA,IACtBC,EAAAA,kBAAkBX,KAAKM,YAAa,CACtC,IAAI0B,EAAMf,OAAOgB,SAASC,KACtBF,IACFA,EAAMA,EAAIG,QAAQ,IAAK,KACzB,IAAIC,EAAStB,SAASuB,eAAeL,GACjCI,GACFpC,KAAKQ,aAAa4B,EAAOE,UAAW5B,yBApD3C6B,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAIyCC,OAAMC,WAAA,CAAA,CAAAC,KAA9CC,EAAAA,OAAML,KAAA,CAACM,EAAAA,gJAjDtB,GCTAC,EAAA,WAcE,SAAAA,EACUC,EACAC,EACqB3C,GAFrBN,KAAAgD,GAAAA,EACAhD,KAAAiD,OAAAA,EACqBjD,KAAAM,WAAAA,SAGRyC,EAAAxC,UAAA2C,QAAvB,WACE,GAAIvC,EAAAA,kBAAkBX,KAAKM,YAAa,CACtC,IAAI0B,EAAMhC,KAAKgD,GAAGG,cAAcjB,KAC5BF,IACEhC,KAAKoD,UAEPC,QAAQC,UAAU,KAAM,KAAMtB,GAEhCA,EAAMA,EAAIG,QAAQ,IAAK,KAEzB,IAAIC,EAAStB,SAASuB,eAAeL,IAAQlB,SAASuB,eAAerC,KAAK6B,UAG1E,OAFIO,GACFpC,KAAKiD,OAAOzC,aAAa4B,EAAOE,UAAW,CAAErC,SAAUD,KAAKC,SAAUE,OAAQH,KAAKG,OAAQD,OAAQF,KAAKE,UACnG,wBA7BZqD,EAAAA,UAASf,KAAA,CAAC,CACTgB,SAAU,oEALeC,EAAAA,kBAElBpD,SAeoCqC,OAAMC,WAAA,CAAA,CAAAC,KAA9CC,EAAAA,OAAML,KAAA,CAACM,EAAAA,oDATTY,EAAAA,MAAKlB,KAAA,CAAC,8BACNkB,EAAAA,MAAKlB,KAAA,CAAC,4BACNkB,EAAAA,MAAKlB,KAAA,CAAC,0BACNkB,EAAAA,MAAKlB,KAAA,CAAC,4BACNkB,EAAAA,MAAKlB,KAAA,CAAC,6BAQNmB,EAAAA,aAAYnB,KAAA,CAAC,cApBhB,GCAAoB,EAAA,oDAICC,EAAAA,SAAQrB,KAAA,CAAC,CACRsB,aAAc,CAACf,GACfgB,UAAW,CAAC1D,GACZ2D,QAAS,CAACjB,SAPZ","sourcesContent":["import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport interface ISimpleSmoothScrollOption {\n  duration?: number;\n  easing?: 'linear' | 'easeInQuad' | 'easeOutQuad' | 'easeInOutQuad' | 'easeInCubic' | 'easeOutCubic' | 'easeInOutCubic' | 'easeInQuart' | 'easeOutQuart' | 'easeInOutQuart' | 'easeInQuint' | 'easeOutQuint' | 'easeInOutQuint';\n  offset?: number;\n}\n\nexport class SimpleSmoothScrollOption {\n  public duration: number;\n  public easing: any;\n  public offset: any;\n\n  constructor(option: ISimpleSmoothScrollOption) {\n    this.duration = option.duration || 800;\n    this.offset = option.offset || 0;\n    this.easing = this.EasingFunctions[option.easing] || this.EasingFunctions['easeInOutQuad'];\n  }\n\n  /**\n   * EasingFunctions - from https://gist.github.com/gre/1650294\n   */\n  private EasingFunctions = {\n    // no easing, no acceleration\n    linear: (t) => { return t },\n    // accelerating from zero velocity\n    easeInQuad: (t) => { return t * t },\n    // decelerating to zero velocity\n    easeOutQuad: (t) => { return t * (2 - t) },\n    // acceleration until halfway, then deceleration\n    easeInOutQuad: (t) => { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t },\n    // accelerating from zero velocity \n    easeInCubic: (t) => { return t * t * t },\n    // decelerating to zero velocity \n    easeOutCubic: (t) => { return (--t) * t * t + 1 },\n    // acceleration until halfway, then deceleration \n    easeInOutCubic: (t) => { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1 },\n    // accelerating from zero velocity \n    easeInQuart: (t) => { return t * t * t * t },\n    // decelerating to zero velocity \n    easeOutQuart: (t) => { return 1 - (--t) * t * t * t },\n    // acceleration until halfway, then deceleration\n    easeInOutQuart: (t) => { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t },\n    // accelerating from zero velocity\n    easeInQuint: (t) => { return t * t * t * t * t },\n    // decelerating to zero velocity\n    easeOutQuint: (t) => { return 1 + (--t) * t * t * t * t },\n    // acceleration until halfway, then deceleration \n    easeInOutQuint: (t) => { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t }\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleSmoothScrollService {\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\n\n  public smoothScroll(height: number, opt: ISimpleSmoothScrollOption) {\n    if (isPlatformBrowser(this.platformId)) {\n      const option = new SimpleSmoothScrollOption(opt);\n      const duration = option.duration;\n      const doc = document.documentElement;\n      const begin = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n      const t = 10;\n      const tick = 1 / (duration / t);\n      height += option.offset;\n      const distance = height - begin;\n      if (distance == 0) return;\n      let time = 0;\n      let y, current;\n      let s = setInterval(function () {\n        y = option.easing(time);\n        current = y * distance + begin;\n        if (current >= height && distance > 0) {\n          current = height;\n          clearInterval(s);\n        }\n        if (current < height + tick && distance < 0) {\n          current = height;\n          clearInterval(s);\n        }\n        if (current < 0 && distance < 0) {\n          current = 0;\n          clearInterval(s);\n        }\n        window.scrollTo(0, current);\n        time += tick;\n      }, t);\n    }\n  }\n\n  public smoothScrollToTop(opt: ISimpleSmoothScrollOption = {}) {\n    this.smoothScroll(0, opt);\n  }\n\n  public smoothScrollToAnchor(opt: ISimpleSmoothScrollOption = {}) {\n    if (isPlatformBrowser(this.platformId)) {\n      let eid = window.location.hash;\n      if (eid)\n        eid = eid.replace('#', '');\n      let target = document.getElementById(eid);\n      if (target)\n        this.smoothScroll(target.offsetTop, opt);\n    }\n  }\n}","import { Directive, Input, ElementRef, HostListener, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { SimpleSmoothScrollService } from './ng2-simple-smooth-scroll.service';\n\n@Directive({\n  selector: '[SimpleSmoothScroll]'\n})\nexport class SimpleSmoothScrollDirective {\n  @Input('scrollTo') private scrollTo: string;\n  @Input('duration') private duration: number;\n  @Input('offset') private offset: number;\n  @Input('easing') private easing: 'linear' | 'easeInQuad' | 'easeOutQuad' | 'easeInOutQuad' | 'easeInCubic' | 'easeOutCubic' | 'easeInOutCubic' | 'easeInQuart' | 'easeOutQuart' | 'easeInOutQuart' | 'easeInQuint' | 'easeOutQuint' | 'easeInOutQuint';\n  @Input('showHash') private showHash: boolean;\n\n  constructor(\n    private el: ElementRef,\n    private smooth: SimpleSmoothScrollService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) { }\n\n  @HostListener('click') onClick() {\n    if (isPlatformBrowser(this.platformId)) {\n      let eid = this.el.nativeElement.hash;\n      if (eid) {\n        if (this.showHash) {\n          // Change URL hash without page jump\n          history.pushState(null, null, eid);\n        }\n        eid = eid.replace('#', '');\n      }\n      let target = document.getElementById(eid) || document.getElementById(this.scrollTo);\n      if (target)\n        this.smooth.smoothScroll(target.offsetTop, { duration: this.duration, easing: this.easing, offset: this.offset });\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SimpleSmoothScrollService } from './ng2-simple-smooth-scroll.service';\nimport { SimpleSmoothScrollDirective } from './ng2-simple-smooth-scroll.directive';\n\n@NgModule({\n  declarations: [SimpleSmoothScrollDirective],\n  providers: [SimpleSmoothScrollService],\n  exports: [SimpleSmoothScrollDirective]\n})\nexport class SimpleSmoothScrollModule { }\n"]}